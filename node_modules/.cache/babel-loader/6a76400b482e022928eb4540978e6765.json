{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cardSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemtocart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cardSlice.actions;\nexport default cardSlice;","map":{"version":3,"sources":["/Users/mamta/Downloads/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","cardSlice","name","initialState","items","totalQuantity","reducers","addItemtocart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE;AAFH,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAI,CAACO,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AACfD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADG;AAEfE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJL;AAKff,UAAAA,IAAI,EAAGQ,OAAO,CAACU;AALA,SAAjB;AAOD,OARD,MASI;AACAR,QAAAA,YAAY,CAACM,QAAb;AACCN,QAAAA,YAAY,CAACO,UAAb,GAAyBP,YAAY,CAACO,UAAb,GAAyBT,OAAO,CAACO,KAA1D;AAEJ;AACF,KAnBO;;AAoBRI,IAAAA,kBAAkB,CAACb,KAAD,EAAQC,MAAR,EAAgB;AAC9B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAYA,EAApC,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAIO,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAgC;AAC5BV,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYkB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAUA,EAArC,CAAd;AAGH,OAJD,MAIK;AACDH,QAAAA,YAAY,CAACM,QAAb;AACAN,QAAAA,YAAY,CAACO,UAAb,GAAyBP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAhE;AACH;AAEJ;;AAjCO;AANkB,CAAD,CAA7B;AA0CA,OAAO,MAAMM,WAAW,GAAGtB,SAAS,CAACuB,OAA9B;AACP,eAAevB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst cardSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    addItemtocart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name : newItem.title\n        });\n      }\n      else{\n          existingItem.quantity ++;\n           existingItem.totalPrice= existingItem.totalPrice+ newItem.price;\n\n      }\n    },\n    removeItemFromCart(state, action) {\n        const id = action.payload;\n        const existingItem = state.items.find(item=> item.id === id);\n        state.totalQuantity--;\n        if (existingItem.quantity === 1){\n            state.items = state.items.filter(item => item.id!==id);\n\n\n        }else{\n            existingItem.quantity--;\n            existingItem.totalPrice= existingItem.totalPrice - existingItem.price;\n        }\n\n    },\n  },\n});\nexport const cartActions = cardSlice.actions;\nexport default cardSlice;"]},"metadata":{},"sourceType":"module"}
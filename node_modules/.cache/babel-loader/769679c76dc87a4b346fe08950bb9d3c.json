{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cardSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    quantity: 0\n  },\n  reducers: {\n    addItemtocart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.total;\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeaddToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cardSlice.actions;\nexport default cardSlice;","map":{"version":3,"sources":["/Users/mamta/Downloads/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","cardSlice","name","initialState","items","quantity","reducers","addItemtocart","state","action","newItem","payload","existingItem","find","item","id","total","push","itemId","price","totalPrice","title","removeaddToCart","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,QAAQ,EAAE;AAFE,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAP,MAAAA,KAAK,CAACQ,KAAN;;AACA,UAAI,CAACJ,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAiB;AACfC,UAAAA,MAAM,EAAER,OAAO,CAACK,EADD;AAEfI,UAAAA,KAAK,EAAET,OAAO,CAACS,KAFA;AAGfd,UAAAA,QAAQ,EAAE,CAHK;AAIfe,UAAAA,UAAU,EAAEV,OAAO,CAACS,KAJL;AAKfjB,UAAAA,IAAI,EAAGQ,OAAO,CAACW;AALA,SAAjB;AAOD,OARD,MASI;AACAT,QAAAA,YAAY,CAACP,QAAb;AACCO,QAAAA,YAAY,CAACQ,UAAb,GAAyBR,YAAY,CAACQ,UAAb,GAAyBV,OAAO,CAACS,KAA1D;AAEJ;AACF,KAnBO;;AAoBRG,IAAAA,eAAe,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAYA,EAApC,CAArB;;AACA,UAAIH,YAAY,CAACP,QAAb,KAA0B,CAA9B,EAAgC;AAC5BG,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAmBT,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAUA,EAArC,CAAd;AAGH,OAJD,MAIK;AACDH,QAAAA,YAAY,CAACP,QAAb;AACAO,QAAAA,YAAY,CAACQ,UAAb,GAAyBR,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACO,KAAhE;AACH;AAEJ;;AAhCO;AANkB,CAAD,CAA7B;AAyCA,OAAO,MAAMK,WAAW,GAAGvB,SAAS,CAACwB,OAA9B;AACP,eAAexB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst cardSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    quantity: 0,\n  },\n  reducers: {\n    addItemtocart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.total\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name : newItem.title\n        });\n      }\n      else{\n          existingItem.quantity ++;\n           existingItem.totalPrice= existingItem.totalPrice+ newItem.price;\n\n      }\n    },\n    removeaddToCart(state, action) {\n        const id = action.payload;\n        const existingItem = state.items.find(item=> item.id === id);\n        if (existingItem.quantity === 1){\n            state.items = state.items.filter(item => item.id!==id);\n\n\n        }else{\n            existingItem.quantity--;\n            existingItem.totalPrice= existingItem.totalPrice - existingItem.price;\n        }\n\n    },\n  },\n});\nexport const cartActions = cardSlice.actions;\nexport default cardSlice;"]},"metadata":{},"sourceType":"module"}